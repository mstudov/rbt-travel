"""empty message

Revision ID: 697e9d533625
Revises: 8ae2e326b43c
Create Date: 2020-02-27 13:09:38.581140

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '697e9d533625'
down_revision = '8ae2e326b43c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_first_name'), 'users', ['first_name'], unique=False)
    op.create_index(op.f('ix_users_last_name'), 'users', ['last_name'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guide_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tourist_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('travel_arrangements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('total_spots', sa.Integer(), nullable=True),
    sa.Column('avl_spots', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('guide_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['guide_id'], ['guide_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guide_user_responses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('guide_id', sa.Integer(), nullable=False),
    sa.Column('travel_arrangement_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['guide_id'], ['guide_users.id'], ),
    sa.ForeignKeyConstraint(['travel_arrangement_id'], ['travel_arrangements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('travel_arrangement_tourist_users',
    sa.Column('travel_arrangement_id', sa.Integer(), nullable=False),
    sa.Column('tourist_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tourist_user_id'], ['tourist_users.id'], ),
    sa.ForeignKeyConstraint(['travel_arrangement_id'], ['travel_arrangements.id'], ),
    sa.PrimaryKeyConstraint('travel_arrangement_id', 'tourist_user_id')
    )
    op.drop_table('user_type')
    op.drop_table('travel_arrangement')
    op.drop_table('travel_arrangement_tourist_user')
    op.drop_table('admin_user')
    op.drop_table('guide_user_response')
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_first_name', table_name='user')
    op.drop_index('ix_user_last_name', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.drop_table('guide_user')
    op.drop_table('tourist_user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tourist_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guide_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=128), nullable=True),
    sa.Column('type_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['user_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=1)
    op.create_index('ix_user_last_name', 'user', ['last_name'], unique=False)
    op.create_index('ix_user_first_name', 'user', ['first_name'], unique=False)
    op.create_index('ix_user_email', 'user', ['email'], unique=1)
    op.create_table('guide_user_response',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('guide_id', sa.INTEGER(), nullable=False),
    sa.Column('travel_arrangement_id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['guide_id'], ['tourist_user.id'], ),
    sa.ForeignKeyConstraint(['travel_arrangement_id'], ['travel_arrangement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('travel_arrangement_tourist_user',
    sa.Column('travel_arrangement_id', sa.INTEGER(), nullable=False),
    sa.Column('tourist_user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['tourist_user_id'], ['tourist_user.id'], ),
    sa.ForeignKeyConstraint(['travel_arrangement_id'], ['travel_arrangement.id'], ),
    sa.PrimaryKeyConstraint('travel_arrangement_id', 'tourist_user_id')
    )
    op.create_table('travel_arrangement',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('start_date', sa.DATE(), nullable=True),
    sa.Column('end_date', sa.DATE(), nullable=True),
    sa.Column('description', sa.VARCHAR(length=250), nullable=True),
    sa.Column('location', sa.VARCHAR(length=50), nullable=True),
    sa.Column('price', sa.INTEGER(), nullable=True),
    sa.Column('avl_spots', sa.INTEGER(), nullable=True),
    sa.Column('admin_id', sa.INTEGER(), nullable=False),
    sa.Column('guide_id', sa.INTEGER(), nullable=True),
    sa.Column('total_spots', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_user.id'], ),
    sa.ForeignKeyConstraint(['guide_id'], ['guide_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_type',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.drop_table('travel_arrangement_tourist_users')
    op.drop_table('guide_user_responses')
    op.drop_table('travel_arrangements')
    op.drop_table('tourist_users')
    op.drop_table('guide_users')
    op.drop_table('admin_users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_last_name'), table_name='users')
    op.drop_index(op.f('ix_users_first_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('user_roles')
    # ### end Alembic commands ###
